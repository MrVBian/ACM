专题四 最短路练习


//k短路裸题  https://www.cnblogs.com/shuaihui520/p/9623597.html

A POJ 2387 Til the Cows Come Home
题意：
    给定有n个地点（编号从1到n），m条道路每行三个整数，分别代表这条道路的起点终点和长度。求出从1到n的最短路
思路：
    最短路裸题，采用多种算法解，优化模板。


B POJ 2253 Frogger
题意： 
    有一只青蛙要从A点跳到B点。青蛙由于身体机能限制，所以有一个极限跳跃远度。
    求：这个极限最少是多少，才能完成这个任务。点是二维坐标，其中第一个点是A点，第二个点是B点。
思路：
    最小最大路，整体最小局部（每条路）最大，所有路中最大的————每个路中最小的。
    if( d[j] > max(d[k], G[k][j]) )
        d[j] = max(d[k], G[k][j]);
        d[j] = min(d[j], max(d[k], G[k][j]) )；


C POJ 1797 Heavy Transportation
题意：
    从城市1到城市n运送货物，有m条道路，每条道路都有它的最大载重量，问从城市1到城市m运送最多的重量是多少。
思路：
    最大最小路，整体最大局部（每条路）最小，所有路中最小的————每个路中最大的。
    if( d[j] < min(d[k], G[k][j]))
        d[j] = min(d[k], G[k][j]);
        d[j] = max(d[j], min(d[k], G[k][j]) );


D POJ 3268 Silver Cow Party
题意：
    给出n个点m条边以及最后要回到的点x，接着是m条边，代表从牛a到牛b需要花费c时间，现在所有牛要到牛x那里去参加聚会，
    并且所有牛参加聚会后还要回来，每个牛都有一个参加聚会并且回来的最短时间，从这些最短时间里找出一个最大值输出。
思路：
    双向单源最短路
    从x到i的最短路径代表他们返回的最短路径，然后将所有边反过来，再从x到i的最短路径代表他们来参加聚会的最短路径，
    这样对应相加找出一个最大值。


E POJ 1860 Currency Exchange
题意：
    有m种货币兑换方式，可以兑换n种货币，每种兑换方式只能互换两种货币，且汇率与手续费各不相同。
    某人初始时手中有S货币V元，问他是否有可能通过货币兑换，在最后换回货币S时实现盈利，有可能则输出YES，否则输出NO.
    即检测是否存在正环
思路：
    正环检测
    把每种货币做为节点编号，边的权值为[汇率和手续费]，判断图中是否存在正权回路。
    若有，说明可以盈利；若没有，说明不能盈利。与最短路不同的是松弛条件.
    汇率/手续费
    if(d[j] < (d[k] - G[k][j].second) * G[k][j].first )
        d[j] = (d[k] - G[k][j].second) * G[k][j].first;


F POJ 3259 Wormholes
题意：
    John的农场里n块地，m条路连接两块地，w个虫洞，虫洞是一条单向路，会在你离开之前把你传送到目的地，就是当你走虫洞的时候
    时间会倒退z s。我们的任务是知道会不会在从某块地出发后又回来，看到了离开之前的自己。总的来说，就是看图中有没有负权环。
    有的话就是可以，没有的话就是不可以了。
思路：
    负环检测。
    如果不涉及到了环    优先队列+链式前向星+spfa/dijkstra最快  
    如果涉及到了环      没法用优先队列，采用链式前向星+spfa/dijkstra最快


G POJ 1502 MPI Maelstrom
题意：
    给定一个不完全的矩阵，数字表示权值，x表示两点间不可达
    由于自身到自身花费的时间为0，所以没有给出，由于i到j和j到i距离相同，互达时间相同
    所以只给出了一半的临界矩阵。根据给你的这个临界矩阵，来求从点1到其他点所花费最短时间集里面的的最大值。

思路：
    求最大值，水过


H POJ 3660 Cow Contest
题意：
    有 n 头牛比赛，m 种比赛结果，问通过 m 种比赛结果判断有多少头牛的排名可以被确定。
思路：
    注意到若牛 a 和 c 没有直接的比赛结果，
    却有 a 胜于 b ，b 胜于 c ,那么其实 a 和 c 的比赛结果也是确定的。接下来分析如何判断牛的排名是否被确定：
    显然，如果有 p 头牛胜于 a ，a 胜于 q 头牛，若 p + q = n - 1 , (注意 n 是牛的数量) 那么 a 的排名已经确定。
    抽象为简单的floyd传递闭包算法，在加上每个顶点的出度与入度 （出度+入度=顶点数-1，则能够确定其编号）。
    传递闭包————离散数学，如果要优化算法，可以使用spfa/dijkstra每一个点。
    if(d[i][j] == 1 || (d[i][k] == 1 && d[k][j] == 1))  //i、j边是否有路
        d[i][j] = 1;


I POJ 2240 Arbitrage
题意：
    n种国家的货币，m个换算汇率。问你能不能赚钱。
思路：
    spfa每个点，出现正环则可以赚钱。
注意：
    枚举所有开始的起点


J POJ 1511 Invitation Cards
题意:
    发传单！怎么样选择路线，使得Acmers们在去和回的过程 花掉的车费最少。
    给定一个有向图，求从源点到其他各点的往返最短路径和。
思路：
    双向单源最短路


K POJ 3159 Candies
题意：
    n个人，m个信息，每行的信息是3个数字，A,B,C，表示B比A多出来的糖果不超过C个，问你，n号人最多比1号人多几个糖果。
思路：
    差分约束+最短路
    
    差分约束系统：
        有两种方式可以求解，最短路和最长路。当我们把不等式整理成d[a]+w<=d[b]时，我们求最长路。整理成d[a]+w>=d[b]时，
        我们求最短路。当求最短路时，我们通常要把各点距离初始化为正无穷，求最短路，把各点距离逐渐减小，直到符合所有
        不等式。也就是开始各点不符合条件，后来通过减小变得符合了，所以一定是符合条件的最大值。既然是求最大值，并且是
        减小各点距离，也就是把各点由数轴的右侧向左侧拉，所以我 们一定要选择一个最终在数轴最左侧的点，并初始化为0，
        把所有正无穷的点拉近到符合不等式。最长路同理。

    不等式整理成d[a]+w<=d[b]时，我们求最长路。
    不等式整理成d[a]+w>=d[b]时，我们求最短路。
    最短路求得是最大值，最长路求得是最小值。


L POJ 2502 Subway
题意：
    人走路的速度是10km/h，地铁的速度是40km/h。题目给出一个家起点，一个学校终点，以及几条地铁线路运行的站点。
    求从家到学校最少需要多少时间。题目给的点的做坐标单位是m；答案输出从起点到终点的最短时间（分钟数）。
思路：
    单位换算、欧氏距离、新颖建图
    先按照地铁速度建图，再以步行速度补全其它点的边。


M POJ 1062 昂贵的聘礼
题意：
    地位等级差距限制m和物品的总数n。接下来按照编号从小到大依次给出了n个物品的描述,
    物品的价格val、主人的地位等级、Rank和替代品总数k。接下来k行表示替代品的编号t和"优惠价格"v。
    问怎么样选取可以让你的花费最少来购买到物品1
思路：
    假设一个0号物品，求由0号物品换到1号物品的花费。
    关于等级限制，无法确定酋长是否是最高等级，于是可以将0号物品依次设为n个物品的等级，
    并假设0号物品为最低等级，进行n次最短路操作，则可以得到所有交换情况


N POJ 1847 Tram
题意：
    n个点，电车从a到b。每个交叉点可以到其它m个点，但默认只通往给出的第一个点，
    如果要到其它点，必须改变轨道方向一次。问a到b最少改变几次轨道方向。
思路：
    最短路裸题
注意：
    不可达情况。


O LightOJ 1074 Extended Traffic
题意：
    城市有多个路口，每个都有一个值val，路口u到v的权值为(val[v] - val[u])的三次方，有Q个询问，
    每次询问从1到q[i]的最短路，如果<3或者无法到达则输出？，否则输出最短路大小。
思路：
    由于权值是差的三次方，所以有可能存在负环，负环可以使最短路无限小，
    在跑最短路的时候把负环全部标记即可。
    dfs把负环的连通图的点全都标记


P HDU 4725 The Shortest Path in Nya Graph
题意：
    每个点放在一层，然后给了n个点，相邻的两层距离是固定的c，有额外m条边，
    然后求1到n的最短路径，如果没有则输出-1 
思路：
    层次图
    题目难点在于建图，要将层抽象为边的关系，于是我们可以假设出2 * n个点，每层一个进点，一个出点，
    进点有到该层的实点的有向路和相邻层的出点到它的有向路，出点反之。
    假设1-n为实点，n+i*2-1为i点所在层的抽象入点,n+i*2为i点所在层的抽象出点。
    抽象入点到层内各点距离为0，抽象出点到层内各点距离为0。
    抽象出点到下一层抽象入点距离为c。


Q HDU 3416 Marriage Match IV
题意：
    有 n 个城市，知道了起点和终点，有 m 条有向边，问从起点到终点的最短路一共有多少条。
思路：
    至今未能AC，留到网络流再AC


R HDU 4370 0 or 1
见附图


S POJ 3169 Layout
题意：
    一共有n头牛，有m个关系好的牛的信息，有t个关系不好的牛的信息，对应输入的第一行的三个元素，
    1、接下来m行，每行三个元素x,y,z，表示x牛和y牛相距不希望超过z，      x-y<=z
    2、接下来t行，每行三个元素x,y,z, 表示x牛和y牛的相距至少要有z才行。   x-y>=z
    求1号牛和n号牛的最大距离，如果距离无限大输出-2，如果无解输出-1。
思路：
    差分约束
    1、 x-y<=z
    2、 x-y>=z -> y-x<=-z

    z + y >= x
    符合d[a] + w >= d[b]，我们求最短路，求最大值。 

    结果：
    1、如果d[n]==inf，距离无限大，输出-2；
    2、如果在跑spfa过程中发现了负环，说明问题无解，那么输出-1
    3、否则输出d[n]

