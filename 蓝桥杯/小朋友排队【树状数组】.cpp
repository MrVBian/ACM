#include<bits/stdc++.h>
#include<cstring>
using namespace std;
#define _for(i,a,b) for(int i=(a);i<(b);i++)
typedef long long ll;
const int maxn=1e6+5,N=1e5+5;
int Tree[maxn],a[N],b[N],n;
ll ans,s[N];

inline int lowbit(int x){
    return (x&-x);
}

void add(int x,int val){
    for(int i=x;i<=maxn;i+=lowbit(i))
        Tree[i]+=val;
}

int get(int x){
    int sum=0;
    for(int i=x;i;i-=lowbit(i))
        sum+=Tree[i];
    return sum;
}

int main(){
    _for(i,1,N) s[i]=s[i-1]+i;
    scanf("%d",&n);
    _for(i,0,n){//前逆序
        scanf("%d",&a[i]);
        add(a[i]+1,1);
        b[i] = i+1-get(a[i]+1);
    }
    memset(Tree,0,sizeof(Tree));
    for(int i=n-1;i>=0;i--){//后逆序
        add(a[i]+1,1);
        b[i]+=get(a[i]);
    }
    _for(i,0,n)
        ans+=s[b[i]];
    printf("%lld",ans);
}

//小朋友排队
//
//
//    n 个小朋友站成一排。现在要把他们按身高从低到高的顺序排列，但是每次只能交换位置相邻的两个小朋友。
//
//
//    每个小朋友都有一个不高兴的程度。开始的时候，所有小朋友的不高兴程度都是0。
//
//
//    如果某个小朋友第一次被要求交换，则他的不高兴程度增加1，如果第二次要求他交换，则他的不高兴程度增加2（即不高兴程度为3），依次类推。当要求某个小朋友第k次交换时，他的不高兴程度增加k。
//
//
//    请问，要让所有小朋友按从低到高排队，他们的不高兴程度之和最小是多少。
//
//
//    如果有两个小朋友身高一样，则他们谁站在谁前面是没有关系的。
//
//
//【数据格式】
//
//
//    输入的第一行包含一个整数n，表示小朋友的个数。
//    第二行包含 n 个整数 H1 H2 … Hn，分别表示每个小朋友的身高。
//    输出一行，包含一个整数，表示小朋友的不高兴程度和的最小值。
//
//
//例如，输入：
//3
//3 2 1
//程序应该输出：
//9
//
//
//【样例说明】
//   首先交换身高为3和2的小朋友，再交换身高为3和1的小朋友，再交换身高为2和1的小朋友，每个小朋友的不高兴程度都是3，总和为9。
//
//
//
//
//【数据规模与约定】
//    对于10%的数据， 1<=n<=10；
//    对于30%的数据， 1<=n<=1000；
//    对于50%的数据， 1<=n<=10000；
//    对于100%的数据，1<=n<=100000，0<=Hi<=1000000。
//
//
//
//
//资源约定：
//峰值内存消耗 < 256M
//CPU消耗  < 1000ms
//
//poj2352  二维偏序问题
//bzoj1878
//bzoj2743
//bzoj1452
//Codeforces Round #755 D
//
//
//请严格按要求输出，不要画蛇添足地打印类似：“请您输入...” 的多余内容。
//
//
//所有代码放在同一个源文件中，调试通过后，拷贝提交该源码。
//
//
//注意: main函数需要返回0
//注意: 只使用ANSI C/ANSI C++ 标准，不要调用依赖于编译环境或操作系统的特殊函数。
//注意: 所有依赖的函数必须明确地在源文件中 #include <xxx>， 不能通过工程设置而省略常用头文件。
//
//
//提交时，注意选择所期望的编译器类型。
