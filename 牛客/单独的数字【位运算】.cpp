#include<iostream>
using namespace std;
int a[32];
int n;
int b;
int main()
{
    cin>>n;
    while(n--){
        cin>>b;
        for(int i=0;i<32;i++){
            a[i]+=(b>>i)&1;
        }
    }
    b=0;
    for(int i=0;i<32;i++)
        if(a[i]%3==1)
            b+=(1<<i);
    cout<<b;
}
//给定一个数组 AA，除了一个数出现一次之外，其余数都出现三次。找出出现一次的数。
//如：\{1, 2, 1, 2, 1, 2, 7\}{1,2,1,2,1,2,7}，找出 77。
//你的算法只能是线性时间的复杂度，并且不能使用额外的空间哦～
//输入格式
//第一行输入一个数 n(1 \leq n \leq 500)n(1≤n≤500)，代表数组的长度。
//接下来一行输入 nn 个 int 范围内（-2147483648\ldots 2147483647−2147483648…2147483647）的整数，表示数组 AA。保证输入的数组合法。
//输出格式
//输出一个整数，表示数组中只出现一次的数。
//样例输入
//4
//0 0 0 5
//样例输出
//5
